Working towards the good
Enthusiasm for the new possibilities
Technical
useful ways of thinking about data systems—not just how they work, but also why they work that way, and what questions we need to ask.


 reliable, scalable, and maintainable data systems

outside clients see consistent results


Reliability
The system should continue to work correctly (performing the correct function at the desired level of performance) even in the face of adversity (hardware or software faults, and even human error). See “Reliability”.

Scalability
As the system grows (in data volume, traffic volume, or complexity), there should be reasonable ways of dealing with that growth. See “Scalability”.

Maintainability
Over time, many different people will work on the system (engineering and operations, both maintaining current behavior and adapting the system to new use cases), and they should all be able to work on it productively. See “Maintainability”.


Automated testing is widely used, well understood, and especially valuable for covering corner cases that rarely arise in normal operation.

Rollback config changes.

Set up detailed and clear monitoring, such as performance metrics and error rates. In other engineering disciplines this is referred to as telemetry
TELEMETRY: Monitoring, problem occurs.


Reliability is not just for nuclear power stations and air traffic control software—more mundane applications are also expected to work reliably. Bugs in business applications cause lost productivity (and legal risks if figures are reported incorrectly), and outages of ecommerce sites can have huge costs in terms of lost revenue and damage to reputation.

“If the system grows in a particular way, what are our options for coping with the growth?” and “How can we add computing resources to handle the additional load?”
